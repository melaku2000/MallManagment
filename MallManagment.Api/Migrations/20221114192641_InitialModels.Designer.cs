// <auto-generated />
using System;
using MallManagment.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MallManagment.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221114192641_InitialModels")]
    partial class InitialModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("MySequence", "shared")
                .StartsAt(1000L);

            modelBuilder.Entity("MallManagment.Models.Entities.Adminstrator", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LockCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("PhoneConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenExpireTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.ToTable("Adminstrators");

                    b.HasData(
                        new
                        {
                            EmployeeId = "melaku1234",
                            CreatedDate = new DateTime(2022, 11, 14, 19, 26, 40, 593, DateTimeKind.Utc).AddTicks(2284),
                            Email = "melakumen@gmail.com",
                            EmailConfirmed = true,
                            LastLoginTime = new DateTime(2022, 11, 14, 19, 26, 40, 593, DateTimeKind.Utc).AddTicks(2284),
                            LockCount = 0,
                            ModifyDate = new DateTime(2022, 11, 14, 19, 26, 40, 593, DateTimeKind.Utc).AddTicks(2284),
                            PasswordHash = new byte[] { 224, 191, 142, 212, 233, 85, 45, 8, 172, 203, 233, 25, 67, 44, 208, 5, 9, 75, 156, 225, 199, 24, 192, 223 },
                            PasswordSalt = new byte[] { 78, 247, 2, 61, 72, 46, 207, 239, 0, 104, 222, 29, 203, 95, 52, 181, 16, 183, 48, 69, 132, 231, 196, 219 },
                            PhoneConfirmed = false,
                            Role = 101,
                            Status = 111,
                            TokenExpireTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Approval", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Approval");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Balance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Bank", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactMobilePerson")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OfficePhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.BusinessCatagory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CatagoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BusinessCatagories");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("SlipAttached")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Rent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AgremmentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AgremmentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("MonthlyAmount")
                        .HasColumnType("real");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RoomId");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.RentalMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("RentId");

                    b.ToTable("RentalMessage");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<float>("Area")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IDNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdentificationType")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.UserToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TokenType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Customer", b =>
                {
                    b.HasBaseType("MallManagment.Models.Entities.User");

                    b.Property<string>("CatagoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyTin")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CompanyUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OfficePhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasIndex("CatagoryId");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Employee", b =>
                {
                    b.HasBaseType("MallManagment.Models.Entities.User");

                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR shared.MySequence");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPermanent")
                        .HasColumnType("bit");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            Id = "melaku1234",
                            Address = "N/S/L woreda 12, H.No 3459",
                            CreatedDate = new DateTime(2022, 11, 14, 19, 26, 40, 593, DateTimeKind.Utc).AddTicks(1986),
                            FullName = "Melaku Michael",
                            IDNumber = "1212",
                            IdentificationType = 121,
                            MobilePhone = "0911641927",
                            ModifyDate = new DateTime(2022, 11, 14, 19, 26, 40, 593, DateTimeKind.Utc).AddTicks(1986),
                            TinNumber = "1212",
                            EmployeeNumber = 0,
                            IsPermanent = true,
                            Occupation = "Head manager",
                            Salary = 0m,
                            StartDate = new DateTime(2022, 11, 14, 19, 26, 40, 593, DateTimeKind.Utc).AddTicks(1986),
                            Status = 111
                        });
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Adminstrator", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.Employee", "Employee")
                        .WithOne("Admin")
                        .HasForeignKey("MallManagment.Models.Entities.Adminstrator", "EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Approval", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.User", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("MallManagment.Models.Entities.Payment", "Payment")
                        .WithMany("Approvals")
                        .HasForeignKey("PaymentId");

                    b.Navigation("Admin");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Balance", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MallManagment.Models.Entities.Employee", "Employee")
                        .WithMany("Balances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Payment", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.Rent", "Rent")
                        .WithMany("Payments")
                        .HasForeignKey("RentId");

                    b.Navigation("Rent");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Rent", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.Customer", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MallManagment.Models.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.RentalMessage", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.Message", "Message")
                        .WithMany("RentMessages")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MallManagment.Models.Entities.Rent", "Rent")
                        .WithMany("RentMessages")
                        .HasForeignKey("RentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Message");

                    b.Navigation("Rent");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.UserToken", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.Adminstrator", "Admin")
                        .WithMany("Tokens")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Customer", b =>
                {
                    b.HasOne("MallManagment.Models.Entities.BusinessCatagory", "Catagory")
                        .WithMany("Clients")
                        .HasForeignKey("CatagoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Catagory");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Adminstrator", b =>
                {
                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.BusinessCatagory", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Message", b =>
                {
                    b.Navigation("RentMessages");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Payment", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Rent", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("RentMessages");
                });

            modelBuilder.Entity("MallManagment.Models.Entities.Employee", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Balances");
                });
#pragma warning restore 612, 618
        }
    }
}
