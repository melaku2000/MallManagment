@page "/auth/emailconfirmation"
@using Microsoft.AspNetCore.WebUtilities
@inject IEmailConfirmViewModel confirmViewModel

<PageTitle>Auth/Email_confermation</PageTitle>

<div style="min-width:500px;max-width:650px;">
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>Email confermation</CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            @if (confirmViewModel.EmailConfirmDto != null)
            {
                <EditForm Model="@confirmViewModel.EmailConfirmDto" OnValidSubmit="@(()=>confirmViewModel.SetPasswordAsync())">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <MudTextField Variant="Variant.Outlined" @bind-Value="confirmViewModel.EmailConfirmDto.Password" Label="Password" For="@(()=>confirmViewModel.EmailConfirmDto.Password)" />
                    <MudTextField Variant="Variant.Outlined" @bind-Value="confirmViewModel.EmailConfirmDto.ConfirmPassword" Label="Confirm password" For="@(()=>confirmViewModel.EmailConfirmDto.ConfirmPassword)" />
                    <div>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Submit</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" Link="auth/register">Register</MudButton>
                    </div>
                </EditForm>
            }
        </MudCardContent>
    </MudCard>
</div>

@code {
    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}